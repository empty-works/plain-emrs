-- MySQL Script generated by MySQL Workbench
-- Sa 29 Mai 2021 20:23:03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema spring_security_demo_bcrypt
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spring_security_demo_bcrypt
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spring_security_demo_bcrypt` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`users` ;

CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NULL,
  `password` CHAR(68) NULL,
  `last_signed_on` DATETIME NULL,
  `email_address` VARCHAR(254) NULL,
  `account_created_on` VARCHAR(45) NULL,
  `enabled` TINYINT(1) NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`patients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`patients` ;

CREATE TABLE IF NOT EXISTS `mydb`.`patients` (
  `patient_id` INT NOT NULL AUTO_INCREMENT,
  `given_name` VARCHAR(50) NULL,
  `middle_name` VARCHAR(50) NULL,
  `last_name` VARCHAR(50) NULL,
  `street_address` VARCHAR(100) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(50) NULL,
  `country` VARCHAR(55) NULL,
  `phone_number` VARCHAR(15) NULL,
  `ward_location` VARCHAR(125) NULL,
  `insurance` VARCHAR(100) NULL,
  `emergency_contact_first_name` VARCHAR(50) NULL,
  `emergency_contact_last_name` VARCHAR(50) NULL,
  `emergency_contact_number` VARCHAR(15) NULL,
  `user_account_user_id` INT NOT NULL,
  PRIMARY KEY (`patient_id`, `user_account_user_id`),
  INDEX `fk_patient_user_account1_idx` (`user_account_user_id` ASC) VISIBLE,
  UNIQUE INDEX `patient_id_UNIQUE` (`patient_id` ASC) VISIBLE,
  CONSTRAINT `fk_patient_user_account1`
    FOREIGN KEY (`user_account_user_id`)
    REFERENCES `mydb`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`medical_records`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`medical_records` ;

CREATE TABLE IF NOT EXISTS `mydb`.`medical_records` (
  `record_id` INT NOT NULL AUTO_INCREMENT,
  `patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`record_id`, `patient_patient_id`),
  INDEX `fk_medical_record_patient1_idx` (`patient_patient_id` ASC) VISIBLE,
  UNIQUE INDEX `record_id_UNIQUE` (`record_id` ASC) VISIBLE,
  CONSTRAINT `fk_medical_record_patient1`
    FOREIGN KEY (`patient_patient_id`)
    REFERENCES `mydb`.`patients` (`patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`diagnoses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`diagnoses` ;

CREATE TABLE IF NOT EXISTS `mydb`.`diagnoses` (
  `date` DATETIME NULL,
  `diagnosis` BLOB NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_diagnosis_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`appointments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`appointments` ;

CREATE TABLE IF NOT EXISTS `mydb`.`appointments` (
  `appointment_date` DATETIME NULL,
  `appointment_doctor_first_name` VARCHAR(50) NULL,
  `appointment_doctor_last_name` VARCHAR(50) NULL,
  `appointment_department` VARCHAR(50) NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_appointment_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`medications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`medications` ;

CREATE TABLE IF NOT EXISTS `mydb`.`medications` (
  `medication` BLOB NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_medication_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`conditions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conditions` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conditions` (
  `condition` INT NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_condition_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`allergies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`allergies` ;

CREATE TABLE IF NOT EXISTS `mydb`.`allergies` (
  `allergy` INT NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_allergy_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`visits`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`visits` ;

CREATE TABLE IF NOT EXISTS `mydb`.`visits` (
  `visit_date` DATETIME NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_visit_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`vitals`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`vitals` ;

CREATE TABLE IF NOT EXISTS `mydb`.`vitals` (
  `vitals_date` DATETIME NULL,
  `height` INT NULL,
  `weight` INT NULL,
  `calculated_bmi` INT NULL,
  `temperature` FLOAT NULL,
  `pulse` INT NULL,
  `respiratory_rate` INT NULL,
  `blood_pressure_systolic` INT NULL,
  `blood_pressure_diastolic` INT NULL,
  `arterial_blood_oxygen_saturation` INT NULL,
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_vitals_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`access_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`access_logs` ;

CREATE TABLE IF NOT EXISTS `mydb`.`access_logs` (
  `user_account_user_id` INT NOT NULL,
  `username` VARCHAR(50) NULL,
  `date_time_of_visit` DATETIME NULL,
  PRIMARY KEY (`user_account_user_id`),
  CONSTRAINT `fk_access_log_user_account1`
    FOREIGN KEY (`user_account_user_id`)
    REFERENCES `mydb`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`family_relations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`family_relations` ;

CREATE TABLE IF NOT EXISTS `mydb`.`family_relations` (
  `medical_record_record_id` INT NOT NULL,
  `medical_record_patient_patient_id` INT NOT NULL,
  `related_patient_id` INT NULL,
  `relation` VARCHAR(25) NULL,
  PRIMARY KEY (`medical_record_record_id`, `medical_record_patient_patient_id`),
  CONSTRAINT `fk_family_relations_medical_record1`
    FOREIGN KEY (`medical_record_record_id` , `medical_record_patient_patient_id`)
    REFERENCES `mydb`.`medical_records` (`record_id` , `patient_patient_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`roles` ;

CREATE TABLE IF NOT EXISTS `mydb`.`roles` (
  `role_id` INT NOT NULL,
  `role_name` VARCHAR(45) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`users_roles` ;

CREATE TABLE IF NOT EXISTS `mydb`.`users_roles` (
  `users_user_id` INT NOT NULL,
  `roles_role_id` INT NOT NULL,
  PRIMARY KEY (`users_user_id`, `roles_role_id`),
  INDEX `fk_users_roles_roles1_idx` (`roles_role_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_roles_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `mydb`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_roles_roles1`
    FOREIGN KEY (`roles_role_id`)
    REFERENCES `mydb`.`roles` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `spring_security_demo_bcrypt` ;

-- -----------------------------------------------------
-- Table `spring_security_demo_bcrypt`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spring_security_demo_bcrypt`.`users` ;

CREATE TABLE IF NOT EXISTS `spring_security_demo_bcrypt`.`users` (
  `username` VARCHAR(50) NOT NULL,
  `password` CHAR(68) NOT NULL,
  `enabled` TINYINT(1) NOT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spring_security_demo_bcrypt`.`authorities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spring_security_demo_bcrypt`.`authorities` ;

CREATE TABLE IF NOT EXISTS `spring_security_demo_bcrypt`.`authorities` (
  `username` VARCHAR(50) NOT NULL,
  `authority` VARCHAR(50) NOT NULL,
  UNIQUE INDEX `authorities_idx_1` (`username` ASC, `authority` ASC),
  CONSTRAINT `authorities_ibfk_1`
    FOREIGN KEY (`username`)
    REFERENCES `spring_security_demo_bcrypt`.`users` (`username`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
